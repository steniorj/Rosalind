from utilities import *
from DNAToolKit import *

def readFile(filePath):
    '''Read files from FASTA format and returns a list of lines'''
    with open(filePath,'r') as f:
        return [line.strip() for line in f.readlines()]

def gc_content(seq):
    '''GC content in a DNA/RNA sequence'''
    return ((seq.count('G') + seq.count('C'))/len(seq)*100)

FASTAlist = readFile('FASTAfile.py')
FASTAdict = {}
FASTAlabel = ''
print(FASTAlist)
for line in FASTAlist:
    if '>' in line:
        FASTAlabel = line
        FASTAdict[FASTAlabel] = ''
    else:
        FASTAdict[FASTAlabel] +=line
print(FASTAdict)

FASTAGC = {}
FASTAGC = {k: gc_content(v) for k,v in FASTAdict.items()}
MaxGCKey = max(FASTAGC, key=FASTAGC.get)
print(f'{MaxGCKey[1:]}\n{FASTAGC[MaxGCKey]}')



# DnaSeq = '''>Rosalind_0883
# TGGGCTCTCAGAATCGTCGGAGTTGACTTAATGTACGCTTATTCAACGACTCCCCTTAGC
# CATACTGGTTTCCGAGCAGCCGATCTCCTACCGGAGGGCGCTACTCAGAACGACCTCATT
# ACCAGCGAGTCAAATCGCGGTGGGGGTTCTCGAAGAAGCCGACCTCAACCCCTTTCTTCT
# CATGTACCTTGTTAGGCACATGAGTCAGTTCAACTTGTGGCATGGAGCGCATAGGGACAG
# TACTCAGCCTTGATGACCGAGGCAATAGATCGTAGTTCAAAGACGTAAGCTTGGCGGTCA
# TCCTCCTTTCTCGCAACGCCTACGAAGGAGCGTGGTAACCCCATTATGACCATGGAGGTA
# TCTATTCACGGTTACACATCGATCAGTTTATATGAAGTCTATCTGTAGGCTTGCAAGCTT
# GCGAGCCCTGATCCGCTATATCCCACTTAGACCCCCGAGCTGGATTCCTCGACAACGGAT
# CCTCGCGCGACTGACGCCGTCGCAGTGCCCGCAGCATCCATTACTGGCGACAAGCCGCGG
# ATCCGGTCTCACGATCGATATGATCACCGCGATATGGGAGACTTCAATCCTTATTTTCGA
# TGGAAATAATCAATATCGAGCTACTTTCCGTCTTTTCGGTGGGGGATGGTAACTCCGCGA
# GTTACAGTAGAAGTTCGGCACCGGCTATGGGAGTATAACGCGCTGTGTCTAACTAGAGAG
# AAAGAGAGGCATAAACGTAACGCAAGGAACCCGCGTAATGTTCTGCACTGTGAGGTTGAA
# CTTTCGGTTAAGCACCTCCGCTCCATTGGATAAACATCGTCTAACA
# >Rosalind_1671
# AGGTCCCACGGGCTTTGACGTTCGTCAGACTGTGGTACTTCTAGTAACTGCCTAGGATGC
# TGTCATAGGTCAACGATACAGTGCCCATGGAGCACCGCAACGTTTGGATCACCGACGACA
# GCCAGCCACAGCGGTCAAGTTGTGGACACTCCATGGTAGCCCGCTTTATGTAACAGAGTA
# GGCATTGATAACTTACGAGTTGCTCGAAAGTACCAGACCTACTCGCCAATGATATATCGT
# AAGCACGGGCGAACTATAACGAATAGTACTTCCTCCTGTATAGAAGGGGGTCACTGAGAC
# CGTTTACTGCTTCTTTCACCTGGACAATTTGAAGAATGGTGCATGAGCAAAAGTTTATCC
# AAACGCCAACAGGACCTGTCCTGCGGTGATGTAAAAAACACTTGCTACGGAAGTTCATTT
# CACGCCCGCCGGACTTAGGTGGTCTTCACTGCTATATCGCCTTCGAGAACTTCGTGCTCG
# GCTTGGATAGACGTCGCAGGCGCCTATGTGTCTCTTTGGCTGACCATAGTGCGGACACGG
# CCTCTCTCGCGACATCCGGACGCTATTCACAGCCGTTTTTGAAGGCCTTCAGTCAGTGCC
# CTTCTTCATGTTGCCGTGTGATAATTACGAACATCCCCCCTACTAGAGCTGTATATTAGT
# CGTTGTGCTGGGCGCCATCATTAGTACACCTCCAACAGGATTCCAGGCGTATCTGATCGT
# GCTCTATGACCCTAAAGTGTCCGTCGGGGCAGGCGTCCTTGATAGAAGTGGTTTGTCTTC
# TATCTTGCCCCGTGAGGCACCGTTACGTTTTCCAGATCCCGGTGGCAGTCCGCACCTTTC
# TCGTTGGCAGGACACTTAGGACGGGTTGTCAGTGTAGGATTTAAACGTCGTGATTCTGTC
# CTATGAAATCAAGTTGATGCAATCCTGCGGGGATCGCCCTTAGAAAGGGTACTTCCTGTG
# >Rosalind_4608
# CCGTGTCCAAAGGATTATTATTGCTAACACCGACATCGATGCATGGGGGTCCACCGCGCC
# ATCTAAGGAATCAAGCGGTATACCGAGCAGCGATGAGGTTCGCTATTCGTTCGAGTCACA
# AGGGGCGGTCTTTGCTCTTCTTCATGTCAGATCGAGCAATGGTACTGGGACGCCGATCTG
# AAGATCTCATTGTACAGTCTTATATCGGATTTTTTACGCACGTGGGCGTCTGAACGAATC
# GGTAACTGAGATCCAGGTCCGGGGATACTTAGGGTCTTGAGCATACACAGAGAAAGCAGT
# ACTTATATTTCAACGCAGTTATACATTACGTTACCTAGGTCCAGCAATAGCTCGACGTAT
# ATCCGCCTCGCACTATTCGTTTGGTGATTTAGCGCCGTTTTTACTCGAAAGCGTTACGTA
# GGATAATGGATCGCATGTCTTTTGGTTGTTATTCGCTGAGCAAGGAGTTCATGGGTAAAG
# TGTTGCCACGGCCTTGTCCAATTGAAGCCTAAGCCTCTTTTATGAGAAAACTTGGTGACT
# GTATTTAACTAGACTCCGTTCCTGGCTTAGCAGGCAGTGTACGTACCCCCAACGTGCCGA
# GAGAATCTTTTACCTGAAATCCCTTCTATTCAAGATGCACTGTCTACGTGCGCGCGACAA
# CACACATAACTCTGTCTGATTTTTGAACGCAGCAACCTGATTGCATGAATATAACCCTCT
# CGTTGAACAATAAAAGCCAAATCGCTGCTAAGACCAGCTGCGAACCAGTGTAGTCGCTTT
# GGTGTGGAAGAACCTCTATGAAGCTGAGAATGTCGGGTATGTATGCGGTGCGGTTACTAG
# AGGGACTGAGGTGGGGGAAGTTCACATTGTTCAGTCTCGGGCAGTTGCACAATGCTT
# >Rosalind_9526
# TATCAGGGATCTATAGGTTCAATGTTAACCTTCTACTGTACGTTGGCAACGAGCAGGCAT
# GGGTGCGTACCATACGTATACGTGCCAGACGGAAATCACCAATACCATCAACATGGCTGC
# CACTTGGCATTTACTTCAACTAGGTTATGGTCAAGGGGGGGGACTAAGGCTGGGTTAATC
# CTACACGCCCGCGCTTAGGTTAATAAGACCCTTGCTGGGTTCGTTAGAACGCCTCTTCTT
# CTAAGGGCGGTGATAAAGCCGGCAGCGGCGCCAATTAATACGCTGACGTTAAACAAAAGT
# TAGCCACGCGCGCAGTCCGGGCACCGGCAGGGGTAAGCACAACTATCTGGGCGGCTCCTA
# AGGACACGTTGAAGCTGTTAGCTGAGTGCGAGTCGTTCCAAGATTATCTTTGTAACTGAC
# TGGGTGACCCTGTCGCGCAGCTAACCCATGGACACCGACGTCCCCATGCCTATGCTCAAT
# CCCGGAGGGAGCTTTAACTGCACGATGCTCAGTACACCTGCACGCCGAGCCATCCCGACG
# TGCAGCCAGCGTGCTAGGATTAAACTATGGCTCCTTCACGGAAACCCAAGATCATCTAAC
# ACCGTGGACATTTCGCTGACGCCTTCCGTGTTCCTAATATTGAAAGCAAAGCGCCCAACT
# GTAAGCAGTTCATCTATGTCCTATCTATACTACGATTTGGCATGCGAAGCGTGGTTCCGA
# AAAGCCCCTACTCCGGTACATTCGGACCTTCCTCTACTTGGAGAATTAAGCCCCGTTGCA
# GCGGTTCAATTATACTGAATCCATATTCGACCCAACCCAGGCCGGGAGTTAGACGAATTG
# GTCGTGGC
# >Rosalind_0068
# AGACGGTGGTCCACGGGCAGGCCTCGCTAAGCGACGGTGTTGGTTCAGCTATAGACGGCG
# TCAGACCTGGCGTGGTGTGGTAAGGTCTAAAGAATATTTGGGTTTTGGAGGGGTGTACCG
# ACCTACAGGTGGTAACAGGTGACATCACACCCTCCAGATGATGGTCCTACAATCTTCACT
# AAACCGGTCTTGCGAAGTTTACTGCTCTTCCAACCTATAAGCCTACCCTGGGTCGGACAA
# GGCGTGAAATAGCAATGACCCCAGGGACAATTGCGATGAGGATTGCGTCTCTCCTCGATA
# CGATTCCACTCTGGCATTCCCCTTGCGTCGGTGGCCGACCATGATCAAAAGCCGGGCAGT
# TTTATTGGTGGTTAAATCCAATCCCTGAATCTTACAGATTAGGTGAGAACAACCCGTCCA
# GCAAGGCTAAATGTAGCGATTGCAGGGCACGCGAAGGACTGCACACTTCATTGACAGAGC
# ACGCTATGCCGAGTTAGGATATTGGTCTTCTGCCTGTGTGAGTCATTGGAGGGCTGAGAC
# TATACCGAACCAGATACCGTACCGTTCGCTGTAACAAAAGTAGCACTAAGCGATATCATC
# AGACTTGTCGATGGAGCATACCGGGGGCCCGGGCTGTGATTCACAATTTCCCTGTGGCCA
# GAGCGGTTAAAGACGGCCCTGCGCATAGACCCACATTGAACTATGGGATCAAAATGACAA
# CTGATGGTCATGGATCCCGCGGGTCCACGTGAAATCTACTCAAAGGCGCGCTAGAAGGGT
# TTAGGGATTTTAATCCTTAATTCTCACCAGAGGGCCATACAAAGCGAGTGAGGACTTATC
# GGGCTCTTTGTAACAATGCGTACCCTATATGATGCCTTGCTAGCCAAGCACGCTTGGAGG
# GTAGTTCATTCAGACCGTTTTA
# >Rosalind_2427
# GTCTGCACGCCTGGATTTTACGAGGAACTTGACAATATCCATAGCAACTAACAATTTGGC
# CGGCGAACGGGCCGGCTATGCTTTATGTAGCGGACTCGTCGCATCAGGTCCAAAACATCA
# CGGTTGTCTATTTAACGCGATCCGGATATGTGGTGTCTCAACCAGTCATGTTTCGCGATA
# CACCCCACGTCGACGTACCGAGTCCCAAATTTCCATACCAGTCAGGCAGTGATTTATACA
# AGACCTGAAATGGCTACACACGTACAAGACAGACAGTAATTTGTCCGTAAAGAATTCAGG
# AAAGAAAGCGTCAGGGCCTTGTGTTAAACATATATATCAAGTCTACCACCGGATGTGAAG
# CCGCAACGCGGTTCGAGGGGTTGGCGTTGCGACCGGGCCGTTTTTCTGAGGACTGTCTGG
# GAGATCATTTTCGAAGCTAGCACCCTGCGTTCGCCTTAGTCGTGAGATTATAAAGGCACT
# CCGAGTGCGGATCTAAAATTTGGTTATCTCTCGAGAATGTATGACAGAAATCACGCCGGA
# CTAAAGGTATGGAGTCCCCCTAAGAACTTTCAATATTCAACCCTGTGAGCGATGGTAGGG
# AGGAATTACACGCGCTCAGTAAGCATGCTAAGTTATTTCAGCAGTGGCACCCCAGGCAAC
# TTGAACTCCCACTAAGTGATGCTCGTCCTCATTGTTATGCCTTTTCAACCGAGTCAGAGT
# GTTTCAGGGCCTACCCAGGGCCGGTCGGCAGTATTTGGGGTCGCAGTGCCCTCGTTGTAC
# ACCTAGTTCTGTTCTGACATACAGCAGGGTATGAGCCGCTACAGAAGCCGTGTCCCCGGT
# TACTGGATGCCTCAGCTTGGACGCTACGAACGCTTCATAACCATTATAAGAGCGACCCAC
# AATAACATCCTAGTCACCGATGCCGCATCTACTTGAGATATTTTGCCCCTGCCTGAGCAA
# GTTCTTTCACAGAGAACGGCCACCTACCCTACCTGA
# >Rosalind_1567
# CGCGTCGACCAACGCATCTTGGTTATCCCCACCCGAACCTCTCGGCGGCAGCCAGACTAC
# ATTTGCGGCCACAGTGCCGAAACAGCCACGGATCTCGCTATAGTTAGCGAGATCACAGAC
# TCCGTAGAGCGTCCCCAACACCCGTACCGGCCCTTAGCGGCGAACACGACGCCCACTAGT
# CTGCTGTTAATCGACGAATGATTGCAACGGGCTGCTATTCAATCAGCCCATACTTTACAC
# TCCGCGTCGGGGGCTTGCGGGAGTCAGAGCGGGCGAGGAATCAGGTTGAGTAAAAGACGC
# CCCCAAAGTTTAGGCAGCGAGATCGGCCTTCCCACAGTACGTGATAGGTGTAAGCAAACT
# GACGTCCAGAGAAAACCTTGCTCGAGCATATCGTTTTCCACGTTACTCTAATAAATCGAG
# TTTATTCAATGAGAAAGATCTCATTAACGAGAATACCGCGGCCGTGGAGTATGGCCGGTG
# CAGTTCTTCCTGTTTGTTGGCATTGAGCTCGCGTTAATTGATCAGATAATTAACGGCCCC
# TTATAACGACCGGCTCTCCCTATAACCAGGATACAGGCTCTGACATGGCCCGCGAACGCC
# GGATATGGACAAAGTGGCTTATGAGTTAGTGGATAAGGAGGTAGATGATGTATTATCGCG
# AAAGAGCGGTTACGGTGTGATGTCTTGTAGCATCTACGGTTAGAATACCGTTTTAGAGTT
# ACCTAATAATATTCAACGATAGAATGTACGGGAAATCTTGGCTTAATAGAACCGTTAGTG
# TAATCACGTCAAACTTTCGCAAGCCGAGACGGCCCCTCAGGATTCACTGCTAGGCCCACA
# TCGTAGCCA
# >Rosalind_2169
# TAAACTGCTAAAGACGGTACTGAGCGCAGCGTGGAGTAATAAACAGTCTCGGTGAAACTC
# GATGCAGCTGGGCCTCATCCGTGGAGCTGGTCCCTGTTCACGTGCGACAGCTGTGTCCCT
# ACATTACGACCAAGAACAGGCTGCCTTGGAACAGTAGATAATGCGGAATGCAGAATAGCC
# CAGCTGCGTCGACCCCTAAAGTTGCACTTGCAGCGCTAAATTTGTCGGGCGTAGGCCTAA
# CGACGTGTACTCTTCTCAATAGGTTGGCGATGATCAAGTGCCCATTCGAGTGCGAGATGG
# AGACAAGCTCTCCAGTAGCTGGAGGTGAGCGCCTCGCCTTGGACAAAGTGGCCTCTTCCG
# TGACGAACAAAGATGGCTATGGGCAAGCGAAGACGGACGAGGTACAATTAAGAAGTCACC
# AGATTAAAGCGTTTAGTACACGAGGTAAGACCTTGACGCACGGTTTCGACGTGCACAAAA
# ATCTTTCCCCGCGGTCGGGGAATAAGGATCTCGAGCAAGAACTTATAACGTAACCAGCAC
# GGAAATACCGGAGGTTTGCTTAGATAGTATACTGGCGAGGGTGCCGGGGCCATGTATTAT
# TCCCAAGTCTTTGAGGTTGCACAGCTGTCCGGGAACCTCTAGGTTTTTGTTTCACCGTCG
# CGCCCAAGACGGGCCTTTTTGGCCTGAGCAGACATCGTGCTGTGTATCTTTGCGTGTCAG
# CGGACTCCCCTATTGCAAAATGCACAGGCCTCTCATGACGCCAGCGACCCAGTCTTTGAC
# GTTCCGGTGTACAGTGTTCCCCGCAGTTATAGGAGTTGTGCTATAAAACGGGACAGCGTG
# AATAAAACCGGCGAAGGGGCACAGTTAACAGCTACAA
# >Rosalind_6246
# GAGACACGCTAGACTGTTCCCCCTATTGCAAAGCATAATAGAGACTGTTTCAAAGTCTCG
# TCTTAGTACCTAGGCTGGCGTTCATATGAGCTCCACCGGTTATTTTGAGAGACGCGAGCG
# TATTCGGATAAAGCCCGTACACTATCGTCCGAGGTGGCACAGCGGATTTGTAAACCGAGG
# AACTTACCACATTCGGCGACGGTCAATTTCGAGCCATCACCGTTTACTTCAACACTACCT
# CGGCCACTTAGGCGGATTTCAGCATTCACATCCGTGCTCTGAACACGTTTTGACTTCAGA
# TGTCGGGCGCGTCAAACCTCTATACAGTCCGATTTGGTAGATGTCGATCTCCAACGTGAA
# TTAAGTGCACTGGTGCACCTGAACGCTGCCAGAGATGTGATGCTTCAGCGGGCCGTTGGT
# GCACGATGTAGAAGGCTAGAAGGCCCCCCCGAGTTTCCGTTTAAAGATTCTACGGGCAGT
# GTATAACTATACGCCCAGGGTCCTACGTTATCCGGACTGAGCAGGGTCTTCGCGGGTAGT
# ATGAGCAGATTGTTTGGTCTATGTACTCCAATATAGAACAGGAACACGTTCTAGTTGGAG
# ATCAGGTACCACCCACGTGTCGGTAAAGTAGCGTGCGACCTGACTAGCCACAGCCCCTTA
# AGTCTACTAGCATTACGTCTGCATCGACCCTGCTTCCGGCGACAAAATGAGGTTTATTGT
# AGCCTAATCTAATTAAACAGTTGCGATGTGAGCTTGGAAAAGATCTGTCGCTTGCAAGTG
# TTAGTAATCCTGGGCATCCAAAGCCTTGAGAAATCGAGCATACGAGTGAGATCTATTGAA
# TACGCGTAGTCGCCGTGAAGCGAGGTTCAGGCGCGCGACGCTTGAACGGGAAGTAGCATG
# GCTAAGAGAATTGTATACCTCAG
# '''
#
# DNAstr = ''
# DNAorg = []
# cont = 0
# DNAdict = {}
#
# #Armazenar num dicionario
# for k, v in enumerate(DnaSeq):
#     if v == '>' and k>0:
#         DNAorg.append(DNAstr)
#         DNAstr = ''
#     if v not in "\n":
#         DNAstr += v
#     elif v == '\n':
#         try:
#             if isinstance(int(DnaSeq[k-1]),int) == True:
#                 DNAorg.append(DNAstr)
#                 DNAstr = ''
#         except:
#             pass
#     if k == (len(DnaSeq) - 1):
#         DNAorg.append(DNAstr)
#         DNAstr = ''
#     #produto final: DNAorg
## >Rosalind_6246
# GAGACACGCTAGACTGTTCCCCCTATTGCAAAGCATAATAGAGACTGTTTCAAAGTCTCG
# TCTTAGTACCTAGGCTGGCGTTCATATGAGCTCCACCGGTTATTTTGAGAGACGCGAGCG

#
# #separar chave do valor
# for k,v in enumerate(DNAorg):
#     if k %2 ==0:
#         DNAdict[v] = DNAorg[k+1]
#     #produto final: DNAdict com chaves e valores separados
#
#
# #calcular porcentagem de CG de cada seq
# maior = 0
# maiorlab = ''
# for k, v in DNAdict.items():
#     freqtot = sum(CountNucFrequency(v,colors=False).values())
#     freqCG = CountNucFrequency(v,colors=False)["C"]+CountNucFrequency(v,colors=False)["G"]
#     porc = (freqCG/freqtot)*100
#
#     # comparar e rankear cada um
#     # Return: The ID of the string having the highest GC-content, followed by the GC-content of that string.
#     try:
#         if porc > maior:
#             maior = porc
#             maiorlab = k
#     except:
#         pass
#
# print(maiorlab.replace('>',''))
# print(f'{maior:.6f}')